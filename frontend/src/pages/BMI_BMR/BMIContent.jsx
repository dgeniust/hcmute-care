import React, {useEffect, useState} from 'react';
import {Radio, DatePicker, InputNumber, Button, message, notification, Skeleton, Collapse  } from 'antd';
import { CheckCircleFilled } from '@ant-design/icons';
import dayjs from 'dayjs';
import BMIWeight from '../../components/bodies';
import '../../css/BMIContent.css';
const dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY', 'DD-MM-YYYY', 'DD-MM-YY'];
const style = {
    display: 'flex',
    flexDirection: 'row',
    gap: 8,
  };
const BMIContent = () => {
    const [value, setValue] = useState(1);
    const [height, setHeight] = useState();
    const [weight, setWeight] = useState();
    const [bmi, setBMI] = useState();
    const [messageApi, contextHolder] = message.useMessage();
    const [api, contextNotificationHolder] = notification.useNotification();
    const [loading, setLoading] = useState(false);
    function error(message){
      messageApi.open({
        type: 'error',
        content: message,
      });
    };  
    function openNotification(pauseOnHover) {
      api.open({
        message: 'Th·ª±c hi·ªán t√≠nh th√†nh c√¥ng',
        description:
          'Ch·ªâ s·ªë BMI c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c t√≠nh th√†nh c√¥ng',
        showProgress: true,
        pauseOnHover,
        icon: (<CheckCircleFilled style={{color: '#2ed573'}}/>)
      });
  };
    const onChange = (e) => {
        setValue(e.target.value);
        console.log(e.target.value);
    };
    const handleHeightChange = (value) => {
      setHeight(value);
      console.log('type', value.type);
    };
    const handleWeightChange = (value) => {
      setWeight(value);
      console.log('changed', value);
    };
    const validateForm = () => {
      let valid = true;
      if (height === undefined) {
        valid = false;
        error("Vui l√≤ng nh·∫≠p chi·ªÅu cao ü´†");
        console.log('Vui l√≤ng nh·∫≠p chi·ªÅu cao');
      }
      if (weight === undefined) {
        valid = false;
        error("Vui l√≤ng nh·∫≠p c√¢n n·∫∑ng ü´†");
        console.log('Vui l√≤ng nh·∫≠p c√¢n n·∫∑ng');
      }
      return valid;
    }
    const handleSubmit = (e) => {
      e.preventDefault();
      const isValid = validateForm();
      if(isValid) {
        if (height && weight) {
          let bmi = weight / ((height / 100) * (height / 100));
          setBMI(bmi.toFixed(2));
          setLoading(true);
          setTimeout(() => {
            setLoading(false);
            openNotification(true);
          }, 2000);
        }
      }
      else {
          error("Hong t√≠nh ƒë∆∞·ª£c n√≠ ∆°iü´†");
      }
    }
    const resultCal = bmi !== undefined && loading == false 
    const items = [
      {
        key: '1',
        label: '1. Nh·ªØng ƒëi·ªÅu c·∫ßn bi·∫øt v·ªÅ BMI',
        children: <p>BMI (Body Mass Index hay ch·ªâ s·ªë kh·ªëi c∆° th·ªÉ) l√† m·ªôt ch·ªâ s·ªë d√πng ƒë·ªÉ ƒë√°nh gi√° t√¨nh tr·∫°ng c∆° th·ªÉ c·ªßa m·ªôt ng∆∞·ªùi d·ª±a tr√™n c√¢n n·∫∑ng v√† chi·ªÅu cao. C√¥ng th·ª©c t√≠nh BMI l√† c√¢n n·∫∑ng (kg) chia cho b√¨nh ph∆∞∆°ng chi·ªÅu cao (m√©t). Th√¥ng qua vi·ªác t√≠nh ch·ªâ s·ªë BMI, ta c√≥ th·ªÉ nh·∫≠n ƒë·ªãnh m·ª©c ƒë·ªô g·∫ßy hay b√©o c·ªßa c∆° th·ªÉ.</p>,
      },
      {
        key: '2',
        label: '2. L·ª£i √≠ch khi t√≠nh ch·ªâ s·ªë BMI',
        children: <p>Ch·ªâ s·ªë BMI gi√∫p ƒë√°nh gi√° t√¨nh tr·∫°ng c∆° th·ªÉ nh∆∞ g·∫ßy, b√¨nh th∆∞·ªùng, th·ª´a c√¢n, ho·∫∑c b√©o ph√¨, t·ª´ ƒë√≥ ƒë∆∞a ra khuy·∫øn c√°o v·ªÅ ch·∫ø ƒë·ªô dinh d∆∞·ª°ng v√† t·∫≠p luy·ªán ph√π h·ª£p.

        Hi·ªán c√≥ 2 thang ƒëo ch·ªâ s·ªë BMI c·ªßa T·ªï ch·ª©c Y t·∫ø Th·∫ø gi·ªõi (WHO) (2) v√† Hi·ªáp h·ªôi ƒë√°i th√°o ƒë∆∞·ªùng c√°c n∆∞·ªõc ch√¢u √Å (IDI&WPRO). Trong ƒë√≥, thang ƒëo BMI c·ªßa IDI&WPRO (hay thang ƒëo BMI ch√¢u √Å) ph√π h·ª£p h∆°n v·ªõi th·ªÉ tr·∫°ng ng∆∞·ªùi Vi·ªát Nam.</p>,
      },
      {
        key: '3',
        label: '3. C√°ch t√≠nh BMI v√† ƒë√°nh gi√° ch·ªâ s·ªë',
        children: <p>C√¥ng th·ª©c t√≠nh ch·ªâ s·ªë BMI:

        BMI = C√¢n n·∫∑ng (kg) / Chi·ªÅu cao¬≤ (m¬≤).
        
        Theo thang ƒëo k·∫øt qu·∫£ t√≠nh BMI c·ªßa ch√¢u √Å, ch·ªâ s·ªë BMI d∆∞·ªõi 18,5 l√† thi·∫øu c√¢n, 18.5-22,9 l√† b√¨nh th∆∞·ªùng, 23-24,9 l√† th·ª´a c√¢n, t·ª´ 25 tr·ªü l√™n l√† b√©o ph√¨.</p>,
      },
      {
        key: '4',
        label: '4. K·∫øt qu·∫£ t√≠nh ch·ªâ s·ªë BMI bao nhi√™u l√† b√¨nh th∆∞·ªùng?',
        children: <p>Theo thang ƒëo BMI ch√¢u √Å, ch·ªâ s·ªë BMI 18,5-22,9 ƒë∆∞·ª£c xem l√† c√¢n n·∫∑ng b√¨nh th∆∞·ªùng cho s·ª©c kh·ªèe.</p>,
      },
      {
        key: '5',
        label: '5. Nguy c∆° khi c∆° ch·ªâ s·ªë BMI th·∫•p',
        children: <p>K·∫øt qu·∫£ test BMI th·∫•p h∆°n 18,5 cho th·∫•y c∆° th·ªÉ ƒëang trong t√¨nh tr·∫°ng thi·∫øu c√¢n, suy dinh d∆∞·ª°ng, lo√£ng x∆∞∆°ng, mi·ªÖn d·ªãch suy y·∫øu‚Ä¶</p>,
      },
      {
        key: '6',
        label: '6. Nguy c∆° khi c∆° ch·ªâ s·ªë BMI cao',
        children: <p>Ch·ªâ s·ªë BMI cao h∆°n 25 l√†m tƒÉng nguy c∆° m·∫Øc c√°c b·ªánh tim m·∫°ch, ƒë∆∞·ªùng huy·∫øt, huy·∫øt √°p, ƒë·ªôt qu·ªµ, m·ªôt s·ªë b·ªánh ung th∆∞‚Ä¶</p>,
      },
      {
        key: '7',
        label: '7. C√¥ng th·ª©c t√≠nh BMI c√≥ ch√≠nh x√°c kh√¥ng?',
        children: <p>T√≠nh BMI online ho·∫∑c t·ª± t√≠nh b·∫±ng c√¥ng th·ª©c l√† s·ª± tham kh·∫£o h·ªØu √≠ch nh∆∞ng kh√¥ng ƒë√°nh gi√° ƒë∆∞·ª£c s·ª± ph√¢n b·ªë m·ª° v√† kh·ªëi l∆∞·ª£ng c∆° b·∫Øp. C·∫ßn k·∫øt h·ª£p v·ªõi c√°c ph∆∞∆°ng ph√°p t√≠nh BMI kh√°c ƒë·ªÉ ƒë√°nh gi√° s·ª©c kh·ªèe to√†n di·ªán, v√≠ d·ª• ph√¢n t√≠ch th√†nh ph·∫ßn c∆° th·ªÉ b·∫±ng m√°y InBody.</p>,
      },
    ];

    return (
        <div className='flex flex-col items-center w-full h-fit gap-4 bg-white'>
            <h1 className='text-xl mt-4 text-[#273c75] font-bold'>C√îNG C·ª§ T√çNH BMI</h1>
            <div className='divider w-[100px] h-[5px] bg-gray-400 mb-4 mt-2'></div>
            <div className='w-fit h-fit border border-blue-600 flex flex-col items-center rounded-3xl mb-8'>
              <form action="" method="post" className='flex flex-col items-center p-8 text-blue-600 font-bold' onSubmit={handleSubmit}>
                  <div className='grid grid-cols-2 grid-flow-row gap-8 p-8 space-y-2 '>
                      <div className='flex flex-col'>
                          <label htmlFor="">Chi·ªÅu cao</label>
                          <InputNumber addonAfter="cm" onChange={handleHeightChange}/>
                      </div>
                      <div className='flex flex-col'>
                          <label htmlFor="">Gi·ªõi t√≠nh</label>
                          <Radio.Group
                              style={style}
                              onChange={onChange}
                              value={value}
                              options={[
                                  {
                                  value: 'Male',
                                  label: 'Nam',
                                  },
                                  {
                                  value: 'Female',
                                  label: 'N·ªØ',
                                  },
                              ]}
                              />
                      </div>
                      <div className='flex flex-col'>
                          <label htmlFor="">C√¢n n·∫∑ng</label>
                          <InputNumber addonAfter="kg" onChange={handleWeightChange}/>
                      </div>
                      
                      <div className='flex flex-col'>
                          <label htmlFor="">Ng√†y sinh</label>
                          <DatePicker defaultValue={dayjs('01/01/2025', dateFormatList[0])} format={dateFormatList} />
                      </div>
                  </div>
                  <div className='w-[50%] flex items-center justify-center'>
                      <Button htmlType='submit' style={{width: '100%', height: '40px', color: 'white', backgroundColor: '#273c75', fontWeight: 'bold', fontSize: '15px'}}>
                      Xem k·∫øt qu·∫£
                      </Button>
                  </div>
              </form>
            </div>
            
            <Skeleton loading={loading} active>
            {
              resultCal ? (<div className='w-full h-fit flex flex-col items-center mb-8'>
                <div className="flex items-center justify-center">
                  <p className="text-3xl font-bold text-blue-600">
                    Your BMI index is{" "}
                    <span className="text-blue-500 font-bold">
                    {bmi} kg/m¬≤
                    </span>
                    <br />
                    <p className="text-center text-base ">
                      Healthy BMI range: 18.5 kg/m¬≤ - 25 kg/m¬≤.
                    </p>
                  </p>
                </div>
  
                <BMIWeight BMI={bmi}/>
                <div className='w-full h-5'>
                  <div className="flex flex-row w-full h-5 rounded-lg">
                    <div className="w-3/6 bg-blue-500 rounded-l-lg"></div>
                    <div className="w-[140px] bg-green-500"></div>
                    <div className="w-[90px] bg-yellow-500"></div>
                    <div className="w-[190px] bg-orange-500"></div>
                    <div className="w-[210px] bg-red-500 rounded-r-lg"></div>
                  </div>
                  <div className="flex flex-row w-full h-full text-lg font-bold text-slate-500">
                    <div className="w-3/6 ">0</div>
                    <div className="w-[140px]">18.5</div>
                    <div className="w-[90px]">23</div>
                    <div className="w-[190px]">25</div>
                    <div className="w-[210px]">30+</div>
                  </div>
                </div>
                
              </div>) : null
            }
            </Skeleton>

            <div className='text-black mt-8 h-fit w-full bg-gray-100 flex items-center justify-center p-2'>
              <div className='w-[90%]'>
                <h1 className='font-bold text-2xl mb-4'>Mi·ªÖn tr·ª´ tr√°ch nhi·ªám</h1>
                <p>L∆∞u √Ω, k·∫øt qu·∫£ t·ª´ c√¥ng c·ª• t√≠nh BMI online ch·ªâ mang t√≠nh tham kh·∫£o, kh√¥ng th·ªÉ thay th·∫ø c√°c ph∆∞∆°ng ph√°p ch·∫©n ƒëo√°n chuy√™n s√¢u t·∫°i c∆° s·ªü y t·∫ø. N·∫øu c√≥ nhu c·∫ßu ch·∫©n ƒëo√°n ch√≠nh x√°c t√¨nh tr·∫°ng c∆° th·ªÉ v√† s·ª©c kh·ªèe</p>
                <p>K·∫øt qu·∫£ t√≠nh BMI tr√™n gi√∫p ƒë√°nh gi√° t√¨nh tr·∫°ng th·ª´a c√¢n, b√©o ph√¨ theo ti√™u chu·∫©n c·ªßa WHO √°p d·ª•ng cho ng∆∞·ªùi Ch√¢u √Å t·ª´ 18 tu·ªïi tr·ªü l√™n, ƒë∆∞·ª£c B·ªô Y t·∫ø c√¥ng b·ªë.  <span><a href="https://thuvienphapluat.vn/van-ban/The-thao-Y-te/Quyet-dinh-2892-QD-BYT-2022-tai-lieu-Huong-dan-chan-doan-va-dieu-tri-benh-beo-phi-533849.aspx">1</a>)</span></p>
              </div>
            </div>
            <div className='text-black mt-8 h-fit w-full flex items-center justify-center p-2'>
              <div className='w-[90%]'>
                <h1 className='font-bold text-2xl mb-4 text-[#273c75]'>C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h1>
                <Collapse ghost items={items} defaultActiveKey={['1']}/>
              </div>
            </div>


            {contextHolder}
            {contextNotificationHolder}
        </div>
    );
}

export default BMIContent;